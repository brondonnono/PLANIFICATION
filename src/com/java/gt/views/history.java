/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.gt.views;

import com.java.gt.beans.History;
import com.java.gt.configurations.StorageConfig;
import com.java.gt.controllers.store_controllers.StorageController;
import com.java.gt.store.CustomFileReader;
import com.java.gt.store.CustomFileWriter;
import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Brondon Nono
 */
public class history extends javax.swing.JFrame {
    private static String article;
    private DefaultTableModel model;
    private ArrayList<History> historyList = new ArrayList<History>(), historyListArranged = new ArrayList<History>(), historyNewList = new ArrayList<History>(), newHistoryList = new ArrayList<History>();
    private static File historyFile;
    private CustomFileWriter fileWriter;
    private CustomFileReader fileReader;
    private Accueil parent;
    /**
     * Creates new form history
     */
    public history() {
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    public history(Accueil parent, String id, String article) {
        
        //this.historyListArranged.clear();
        this.parent = parent;
        this.fileWriter = parent.storageController.getFileWriter();
        this.fileReader = parent.storageController.getFileReader();
        this.article = article;
        this.historyList = this.fileReader.readFileDataHistory();
        historyFile =  new File(StorageConfig.DEFAULT_FOLDER_STORAGE_NAME + "/" + this.fileWriter.getFolderName() + "/" + StorageConfig.DEFAULT_HISTORY_FILE_STORAGE_NAME);
        this.setResizable(false);
        this.setTitle("Historique");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setIconImage((new ImageIcon(getClass().getResource("/com/java/gt"+"/img/logo.png"))).getImage());
        this.setLocationRelativeTo(null);
        initComponents();
        clean.setEnabled(false);
        
        if(!this.historyList.isEmpty()){
            arrangeHistoryList(this.historyList);
            this.historyList.clear();
            initializeTable();
            clean.setEnabled(true);
            System.out.println("isNotEmpty");
        }
      
    }
    
    private void arrangeHistoryList(ArrayList<History> historyList){
        historyList.forEach((history) -> {
           if(history.getId() == (Integer.parseInt(parent.elem[0]))){
               this.historyListArranged.add(history);
               System.out.println(article);
               System.out.println("historyListArranged: "+this.historyListArranged.toString());
               
           }
        });
    }
    
    private void initializeTable() {

        model= new DefaultTableModel();
        
        model.addColumn("#");
        model.addColumn("Article");
        model.addColumn("Date");
        model.addColumn("Opérateur");
        //storageController = new StorageController(this.folderName);
        //System.out.println("historyList:\n"+ historyList);
/**/        this.historyListArranged.forEach((history) -> {
                model.addRow(new Object[]{history.getId(), history.getArticle(), history.getDate(), history.getOperator()});
        });
        tble_history.setModel(model);
    }
    
    private void clearHistory(ArrayList<History> historyList){
        historyList.forEach((notif) ->{
            if(notif.getId() == Integer.parseInt(parent.elem[0]))
                System.out.println("id :"+ notif.getId());
            else 
                newHistoryList.add(notif);
        });
        System.out.println("HistoryList: "+ historyNewList);
        System.out.println("id: "+parent.elem[0]+" History new :"+ newHistoryList);
        new CustomFileWriter().renderAllHistory(newHistoryList, historyFile);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tble_history = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        clean = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        tble_history.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tble_history.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Article", "Date", "Opérateur"
            }
        ));
        tble_history.setRowSelectionAllowed(false);
        tble_history.setUpdateSelectionOnSort(false);
        tble_history.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(tble_history);
        if (tble_history.getColumnModel().getColumnCount() > 0) {
            tble_history.getColumnModel().getColumn(0).setMinWidth(20);
            tble_history.getColumnModel().getColumn(0).setPreferredWidth(20);
            tble_history.getColumnModel().getColumn(0).setMaxWidth(20);
            tble_history.getColumnModel().getColumn(1).setPreferredWidth(200);
            tble_history.getColumnModel().getColumn(3).setPreferredWidth(80);
        }

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HISTORIQUE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jLabel1)
                .addGap(304, 304, 304))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("FERMER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        clean.setText("EFFACER TOUT");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clean, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clean, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        // TODO add your handling code here:
        try {
            //this.historyNewList = fileReader.readFileDataHistory(historyFile);
            clearHistory(this.historyNewList);
            this.historyListArranged.clear();
            initializeTable();
        }catch (Exception e) {
            JOptionPane.showMessageDialog (null,"Erreur de suppression \n"+e.getMessage());
        }
    }//GEN-LAST:event_cleanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clean;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tble_history;
    // End of variables declaration//GEN-END:variables
}
